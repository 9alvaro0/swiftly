name: Code Quality & CI

on:
  pull_request:
    branches: [develop, release, master]
  push:
    branches: [develop, release, master]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  ci:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        id: lint
        run: npm run lint
        continue-on-error: true

      - name: Run type checking and build
        id: build
        run: npm run build
        continue-on-error: true

      - name: Run tests (if available)
        id: test
        run: |
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            npm test
          else
            echo "No tests configured, skipping..."
          fi
        continue-on-error: true

      - name: Comment PR Status
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v6
        with:
          script: |
            const lintStatus = '${{ steps.lint.outcome }}' === 'success' ? '✅' : '❌';
            const buildStatus = '${{ steps.build.outcome }}' === 'success' ? '✅' : '❌';
            const testStatus = '${{ steps.test.outcome }}' === 'success' ? '✅' : '🔄';
            
            const allSuccess = '${{ steps.lint.outcome }}' === 'success' && '${{ steps.build.outcome }}' === 'success';
            const status = allSuccess ? 
                          '✅ CI checks passed successfully!' : 
                          '❌ CI checks failed';
            
            const body = `${status}\n\n🔍 **Quality checks:**\n- ${lintStatus} Linting\n- ${lintStatus} Type checking\n- ${buildStatus} Build successful`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
            
            // Fail the job if any critical step failed
            if (!allSuccess) {
              core.setFailed('One or more CI checks failed');
            }
