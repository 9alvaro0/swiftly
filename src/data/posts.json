[
    {
        "id": "1",
        "title": "Introducción a SwiftUI: Construyendo Interfaces Declarativas con Swift",
        "description": "Descubre los fundamentos de SwiftUI y cómo crear interfaces de usuario modernas y reactivas para aplicaciones iOS.",
        "content": "# Introducción a SwiftUI\n\nSwiftUI es un framework moderno de Apple para construir interfaces de usuario de forma declarativa. En este tutorial, aprenderás los conceptos básicos y crearás tu primera aplicación con SwiftUI.\n\n## ¿Qué es SwiftUI?\n\nSwiftUI es un framework revolucionario que permite a los desarrolladores crear interfaces de usuario con un código más conciso y legible, utilizando Swift y un enfoque declarativo. Esto significa que expresas lo que quieres que haga tu interfaz, no cómo quieres que lo haga.",
        "category": "SwiftUI",
        "level": "Principiante",
        "type": "tutorial",
        "slug": "introduccion-swiftui",
        "metaDescription": "Descubre los fundamentos de SwiftUI y cómo crear interfaces de usuario modernas y reactivas para aplicaciones iOS.",
        "imageUrl": "/images/posts/swiftui-intro.jpg",
        "images": ["/images/posts/swiftui-intro-detail1.jpg", "/images/posts/swiftui-intro-detail2.jpg"],
        "coverImage": "/images/posts/swiftui-intro.jpg",
        "tags": ["SwiftUI", "iOS", "UI Framework", "Apple"],
        "isPublished": true,
        "readTime": 10,
        "wordCount": 2500,
        "createdAt": "2024-04-01T00:00:00Z",
        "updatedAt": "2024-04-10T00:00:00Z",
        "publishedAt": "2024-04-01T00:00:00Z",
        "views": 1250,
        "likes": 78,
        "comments": 15,
        "draft": false,
        "featured": true,
        "language": "es",
        "keywords": ["SwiftUI", "iOS", "desarrollo de aplicaciones", "interfaces de usuario", "Apple"],
        "author": {
            "id": "author-1",
            "name": "Alvaro Guerra",
            "username": "alvaro-guerra",
            "avatar": "/images/authors/alvaro.jpg",
            "bio": "Desarrollador iOS con 5 años de experiencia especializado en SwiftUI y arquitecturas modernas de desarrollo móvil.",
            "socialLinks": {
                "twitter": "https://twitter.com/alvaroguerra",
                "github": "https://github.com/alvaroguerra",
                "linkedin": "https://linkedin.com/in/alvaroguerra"
            }
        },
        "relatedPosts": [
            {
                "id": "2",
                "title": "Swift Concurrency: async/await",
                "slug": "swift-concurrency"
            },
            {
                "id": "3",
                "title": "Arquitectura MVVM en SwiftUI",
                "slug": "arquitectura-mvvm-swiftui"
            }
        ]
    },
    {
        "id": "2",
        "title": "Swift Concurrency: Revolucionando el código asíncrono con async/await",
        "description": "Domina el nuevo modelo de concurrencia de Swift con async/await y actores para crear aplicaciones más rápidas y seguras.",
        "content": "# Swift Concurrency: La revolución async/await\n\nEn Swift 5.5, Apple introdujo un nuevo modelo de concurrencia que transforma la forma en que manejamos el código asíncrono. Este artículo profundiza en async/await, actores y cómo estos conceptos nos ayudan a escribir código más limpio y seguro.\n\n## El problema de la concurrencia tradicional\n\nAntes de Swift 5.5, la programación asíncrona se basaba principalmente en closures y completion handlers, lo que a menudo resultaba en código difícil de leer y mantener, conocido como \"callback hell\".",
        "category": "Swift",
        "level": "Intermedio",
        "type": "article",
        "slug": "swift-concurrency",
        "metaDescription": "Domina el nuevo modelo de concurrencia de Swift con async/await y actores para aplicaciones más seguras y eficientes.",
        "imageUrl": "/images/posts/swiftui-intro.jpg",
        "images": ["/images/posts/swift-concurrency-detail1.jpg", "/images/posts/swift-concurrency-detail2.jpg"],
        "coverImage": "/images/posts/swift-concurrency-cover.jpg",
        "tags": ["Swift 5.5", "Concurrency", "async/await", "actors", "iOS"],
        "isPublished": true,
        "readTime": 12,
        "wordCount": 3200,
        "createdAt": "2024-03-15T00:00:00Z",
        "updatedAt": "2024-04-05T00:00:00Z",
        "publishedAt": "2024-03-20T00:00:00Z",
        "views": 980,
        "likes": 56,
        "comments": 23,
        "draft": false,
        "featured": false,
        "language": "es",
        "keywords": ["Swift concurrency", "async/await", "actores", "programación asíncrona", "desarrollo iOS"],
        "author": {
            "id": "author-1",
            "name": "Alvaro Guerra",
            "username": "alvaro-guerra",
            "avatar": "/images/authors/alvaro.jpg",
            "bio": "Desarrollador iOS con 5 años de experiencia especializado en SwiftUI y arquitecturas modernas de desarrollo móvil.",
            "socialLinks": {
                "twitter": "https://twitter.com/alvaroguerra",
                "github": "https://github.com/alvaroguerra",
                "linkedin": "https://linkedin.com/in/alvaroguerra"
            }
        },
        "relatedPosts": [
            {
                "id": "1",
                "title": "Introducción a SwiftUI: Construyendo Interfaces Declarativas con Swift",
                "slug": "introduccion-swiftui"
            },
            {
                "id": "4",
                "title": "Optimización de rendimiento en aplicaciones iOS",
                "slug": "optimizacion-rendimiento-ios"
            }
        ]
    },
    {
        "id": "3",
        "title": "Arquitectura MVVM en SwiftUI",
        "description": "Aprende a implementar el patrón Model-View-ViewModel en tus aplicaciones SwiftUI para un código más mantenible y testeable.",
        "content": "# Arquitectura MVVM en SwiftUI\n\nEn este tutorial, exploraremos cómo implementar el patrón de arquitectura MVVM (Model-View-ViewModel) en aplicaciones SwiftUI. MVVM es particularmente adecuado para SwiftUI debido a su sistema de binding reactivo y su enfoque declarativo.\n\n## ¿Qué es MVVM?\n\nMVVM separa tus aplicaciones en tres componentes principales: Model (los datos), View (la interfaz de usuario) y ViewModel (la lógica que conecta Model y View).",
        "category": "Arquitectura",
        "level": "Intermedio",
        "type": "tutorial",
        "slug": "arquitectura-mvvm-swiftui",
        "metaDescription": "Aprende a implementar MVVM en SwiftUI para crear aplicaciones más mantenibles, testables y escalables.",
        "imageUrl": "/images/posts/swiftui-intro.jpg",
        "images": ["/images/posts/mvvm-swiftui-detail1.jpg", "/images/posts/mvvm-swiftui-detail2.jpg"],
        "coverImage": "/images/posts/swiftui-intro.jpg",
        "tags": ["SwiftUI", "MVVM", "Arquitectura", "Patrones de Diseño", "iOS"],
        "isPublished": true,
        "readTime": 15,
        "wordCount": 3800,
        "createdAt": "2024-02-20T00:00:00Z",
        "updatedAt": "2024-03-15T00:00:00Z",
        "publishedAt": "2024-02-25T00:00:00Z",
        "views": 1580,
        "likes": 92,
        "comments": 34,
        "draft": false,
        "featured": false,
        "language": "es",
        "keywords": ["MVVM", "SwiftUI", "arquitectura", "patrones de diseño", "desarrollo iOS"],
        "author": {
            "id": "author-2",
            "name": "María López",
            "username": "maria-lopez",
            "avatar": "/images/authors/maria.jpg",
            "bio": "Ingeniera de software especializada en arquitecturas limpias y patrones de diseño para desarrollo iOS.",
            "socialLinks": {
                "twitter": "https://twitter.com/marialopez",
                "github": "https://github.com/marialopez",
                "linkedin": "https://linkedin.com/in/marialopez"
            }
        },
        "relatedPosts": [
            {
                "id": "1",
                "title": "Introducción a SwiftUI: Construyendo Interfaces Declarativas con Swift",
                "slug": "introduccion-swiftui"
            },
            {
                "id": "5",
                "title": "Inyección de dependencias en SwiftUI",
                "slug": "inyeccion-dependencias-swiftui"
            }
        ]
    }
]
